<?xml version="1.0"?>


<!DOCTYPE Ontology [
    <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY xml "http://www.w3.org/XML/1998/namespace" >
    <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
]>


<Ontology xmlns="http://www.w3.org/2002/07/owl#"
     xml:base="http://www.semanticweb.org/muhummad/ontologies/2016/2/Beverages"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:xml="http://www.w3.org/XML/1998/namespace"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     ontologyIRI="http://www.semanticweb.org/muhummad/ontologies/2016/2/Beverages">
    <Prefix name="" IRI="http://www.w3.org/2002/07/owl#"/>
    <Prefix name="owl" IRI="http://www.w3.org/2002/07/owl#"/>
    <Prefix name="rdf" IRI="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
    <Prefix name="xsd" IRI="http://www.w3.org/2001/XMLSchema#"/>
    <Prefix name="rdfs" IRI="http://www.w3.org/2000/01/rdf-schema#"/>
    <Prefix name="Beverages" IRI="http://www.semanticweb.org/muhummad/ontologies/2016/2/Beverages#"/>
    <Annotation>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <Literal datatypeIRI="&rdf;PlainLiteral">This ontology is a descriptive ontology and captures the semantics of coffee variations as we have observed them. There will still, no doubt, be variations in terminology based on region, etc., however, this ontology aims to formally encode the basic semantics of coffee variations.</Literal>
    </Annotation>
    <Annotation>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <Literal datatypeIRI="&rdf;PlainLiteral">Competency questions:

* Is CaffeLatte a type of CafeMocha?
* What ingredients define a CafeMocha?
* Given the components of a coffee, what type of coffee is it?</Literal>
    </Annotation>
    <Annotation>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <Literal datatypeIRI="&rdf;PlainLiteral">This ontology contains a set of test probes to verify its validity.</Literal>
    </Annotation>
    <Declaration>
        <Class IRI="#Americano"/>
    </Declaration>
    <Declaration>
        <Class IRI="#CafAuLait"/>
    </Declaration>
    <Declaration>
        <Class IRI="#CafeMocha"/>
    </Declaration>
    <Declaration>
        <Class IRI="#CaffeLatte"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Cappuccino"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Chococino"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ChocolateSyrup"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ClassificationProbe"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Cocoa"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Coffee"/>
    </Declaration>
    <Declaration>
        <Class IRI="#CoffeeBeans"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Cold"/>
    </Declaration>
    <Declaration>
        <Class IRI="#CondensedMilk"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Consumable"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Cream"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Creamer"/>
    </Declaration>
    <Declaration>
        <Class IRI="#DisjointProbe"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Drink"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Espresso"/>
    </Declaration>
    <Declaration>
        <Class IRI="#EspressoProbe"/>
    </Declaration>
    <Declaration>
        <Class IRI="#FailureProbe"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Hot"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HotChocolate"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IcedCoffee"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Ingredient"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Marshmallow"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Milk"/>
    </Declaration>
    <Declaration>
        <Class IRI="#NewDrinkProbe"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Sago"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SuccessProbe"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Sugar"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Temperature"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TestProbe"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Topping"/>
    </Declaration>
    <Declaration>
        <Class IRI="#VanillaExtract"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Water"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#containedBy"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#contains"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasIngredient"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasTemperature"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasTopping"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isIngredientOf"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isTemperatureOf"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isToppingOf"/>
    </Declaration>
    <EquivalentClasses>
        <Class IRI="#Americano"/>
        <ObjectIntersectionOf>
            <Class IRI="#Coffee"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasIngredient"/>
                <ObjectIntersectionOf>
                    <Class IRI="#Water"/>
                    <ObjectSomeValuesFrom>
                        <ObjectProperty IRI="#hasTemperature"/>
                        <Class IRI="#Hot"/>
                    </ObjectSomeValuesFrom>
                </ObjectIntersectionOf>
            </ObjectSomeValuesFrom>
            <ObjectMinCardinality cardinality="1">
                <ObjectProperty IRI="#contains"/>
                <Class IRI="#Espresso"/>
            </ObjectMinCardinality>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#CafAuLait"/>
        <ObjectIntersectionOf>
            <Class IRI="#Coffee"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasIngredient"/>
                <ObjectIntersectionOf>
                    <Class IRI="#Milk"/>
                    <ObjectSomeValuesFrom>
                        <ObjectProperty IRI="#hasTemperature"/>
                        <Class IRI="#Hot"/>
                    </ObjectSomeValuesFrom>
                </ObjectIntersectionOf>
            </ObjectSomeValuesFrom>
            <ObjectExactCardinality cardinality="3">
                <ObjectProperty IRI="#hasIngredient"/>
                <Class IRI="#Ingredient"/>
            </ObjectExactCardinality>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#CafeMocha"/>
        <ObjectIntersectionOf>
            <Class IRI="#Coffee"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasIngredient"/>
                <Class IRI="#Creamer"/>
            </ObjectSomeValuesFrom>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasIngredient"/>
                <ObjectUnionOf>
                    <Class IRI="#ChocolateSyrup"/>
                    <Class IRI="#Cocoa"/>
                </ObjectUnionOf>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#CaffeLatte"/>
        <ObjectIntersectionOf>
            <Class IRI="#Coffee"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasIngredient"/>
                <Class IRI="#ChocolateSyrup"/>
            </ObjectSomeValuesFrom>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasIngredient"/>
                <Class IRI="#Milk"/>
            </ObjectSomeValuesFrom>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasIngredient"/>
                <Class IRI="#Sugar"/>
            </ObjectSomeValuesFrom>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasIngredient"/>
                <Class IRI="#VanillaExtract"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#Cappuccino"/>
        <ObjectIntersectionOf>
            <Class IRI="#Coffee"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasIngredient"/>
                <ObjectIntersectionOf>
                    <Class IRI="#Milk"/>
                    <ObjectSomeValuesFrom>
                        <ObjectProperty IRI="#hasTemperature"/>
                        <Class IRI="#Hot"/>
                    </ObjectSomeValuesFrom>
                </ObjectIntersectionOf>
            </ObjectSomeValuesFrom>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasTopping"/>
                <Class IRI="#Cream"/>
            </ObjectSomeValuesFrom>
            <ObjectMinCardinality cardinality="3">
                <ObjectProperty IRI="#hasIngredient"/>
                <Class IRI="#Ingredient"/>
            </ObjectMinCardinality>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#Chococino"/>
        <ObjectIntersectionOf>
            <Class IRI="#Coffee"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasIngredient"/>
                <Class IRI="#CondensedMilk"/>
            </ObjectSomeValuesFrom>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasIngredient"/>
                <Class IRI="#HotChocolate"/>
            </ObjectSomeValuesFrom>
            <ObjectAllValuesFrom>
                <ObjectProperty IRI="#hasTopping"/>
                <ObjectUnionOf>
                    <Class IRI="#Cream"/>
                    <Class IRI="#Marshmallow"/>
                </ObjectUnionOf>
            </ObjectAllValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#Coffee"/>
        <ObjectIntersectionOf>
            <Class IRI="#Drink"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasIngredient"/>
                <Class IRI="#CoffeeBeans"/>
            </ObjectSomeValuesFrom>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasIngredient"/>
                <Class IRI="#Water"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#Espresso"/>
        <ObjectIntersectionOf>
            <Class IRI="#Coffee"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasIngredient"/>
                <ObjectIntersectionOf>
                    <Class IRI="#Water"/>
                    <ObjectSomeValuesFrom>
                        <ObjectProperty IRI="#hasTemperature"/>
                        <Class IRI="#Hot"/>
                    </ObjectSomeValuesFrom>
                </ObjectIntersectionOf>
            </ObjectSomeValuesFrom>
            <ObjectAllValuesFrom>
                <ObjectProperty IRI="#hasIngredient"/>
                <ObjectUnionOf>
                    <Class IRI="#CoffeeBeans"/>
                    <ObjectIntersectionOf>
                        <Class IRI="#Water"/>
                        <ObjectSomeValuesFrom>
                            <ObjectProperty IRI="#hasTemperature"/>
                            <Class IRI="#Hot"/>
                        </ObjectSomeValuesFrom>
                    </ObjectIntersectionOf>
                </ObjectUnionOf>
            </ObjectAllValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#IcedCoffee"/>
        <ObjectIntersectionOf>
            <Class IRI="#Coffee"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasIngredient"/>
                <Class IRI="#VanillaExtract"/>
            </ObjectSomeValuesFrom>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasIngredient"/>
                <ObjectIntersectionOf>
                    <Class IRI="#Milk"/>
                    <ObjectSomeValuesFrom>
                        <ObjectProperty IRI="#hasTemperature"/>
                        <Class IRI="#Cold"/>
                    </ObjectSomeValuesFrom>
                </ObjectIntersectionOf>
            </ObjectSomeValuesFrom>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasTemperature"/>
                <Class IRI="#Cold"/>
            </ObjectSomeValuesFrom>
            <ObjectAllValuesFrom>
                <ObjectProperty IRI="#hasTopping"/>
                <Class IRI="#Sago"/>
            </ObjectAllValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <SubClassOf>
        <Class IRI="#ChocolateSyrup"/>
        <Class IRI="#Ingredient"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ClassificationProbe"/>
        <Class IRI="#Drink"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ClassificationProbe"/>
        <Class IRI="#SuccessProbe"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ClassificationProbe"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#hasIngredient"/>
            <Class IRI="#CoffeeBeans"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ClassificationProbe"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#hasIngredient"/>
            <Class IRI="#VanillaExtract"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ClassificationProbe"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#hasIngredient"/>
            <Class IRI="#Water"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ClassificationProbe"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#hasIngredient"/>
            <ObjectIntersectionOf>
                <Class IRI="#Milk"/>
                <ObjectSomeValuesFrom>
                    <ObjectProperty IRI="#hasTemperature"/>
                    <Class IRI="#Cold"/>
                </ObjectSomeValuesFrom>
            </ObjectIntersectionOf>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ClassificationProbe"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#hasTemperature"/>
            <Class IRI="#Cold"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ClassificationProbe"/>
        <ObjectAllValuesFrom>
            <ObjectProperty IRI="#hasTopping"/>
            <Class IRI="#Sago"/>
        </ObjectAllValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Cocoa"/>
        <Class IRI="#Ingredient"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#CoffeeBeans"/>
        <Class IRI="#Ingredient"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Cold"/>
        <Class IRI="#Temperature"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#CondensedMilk"/>
        <Class IRI="#Creamer"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Cream"/>
        <Class IRI="#Creamer"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Cream"/>
        <Class IRI="#Topping"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Creamer"/>
        <Class IRI="#Ingredient"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#DisjointProbe"/>
        <Class IRI="#Drink"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#DisjointProbe"/>
        <Class IRI="#FailureProbe"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#DisjointProbe"/>
        <Class IRI="#Ingredient"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Drink"/>
        <Class IRI="#Consumable"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#EspressoProbe"/>
        <Class IRI="#Espresso"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#EspressoProbe"/>
        <Class IRI="#FailureProbe"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#EspressoProbe"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#hasIngredient"/>
            <Class IRI="#VanillaExtract"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#FailureProbe"/>
        <Class IRI="#TestProbe"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Hot"/>
        <Class IRI="#Temperature"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HotChocolate"/>
        <Class IRI="#Drink"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HotChocolate"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#hasIngredient"/>
            <Class IRI="#Cocoa"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HotChocolate"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#hasIngredient"/>
            <Class IRI="#Sugar"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HotChocolate"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#hasIngredient"/>
            <Class IRI="#Water"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HotChocolate"/>
        <ObjectAllValuesFrom>
            <ObjectProperty IRI="#hasTopping"/>
            <Class IRI="#Marshmallow"/>
        </ObjectAllValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Ingredient"/>
        <Class IRI="#Consumable"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Marshmallow"/>
        <Class IRI="#Topping"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Milk"/>
        <Class IRI="#Creamer"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NewDrinkProbe"/>
        <Class IRI="#Cappuccino"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NewDrinkProbe"/>
        <Class IRI="#SuccessProbe"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NewDrinkProbe"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#hasIngredient"/>
            <Class IRI="#ChocolateSyrup"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Sago"/>
        <Class IRI="#Topping"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SuccessProbe"/>
        <Class IRI="#TestProbe"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Sugar"/>
        <Class IRI="#Ingredient"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Topping"/>
        <Class IRI="#Ingredient"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#VanillaExtract"/>
        <Class IRI="#Ingredient"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Water"/>
        <Class IRI="#Ingredient"/>
    </SubClassOf>
    <DisjointClasses>
        <Class IRI="#ChocolateSyrup"/>
        <Class IRI="#Cocoa"/>
        <Class IRI="#CoffeeBeans"/>
        <Class IRI="#Creamer"/>
        <Class IRI="#Sugar"/>
        <Class IRI="#VanillaExtract"/>
        <Class IRI="#Water"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#ChocolateSyrup"/>
        <Class IRI="#Cocoa"/>
        <Class IRI="#CoffeeBeans"/>
        <Class IRI="#Sugar"/>
        <Class IRI="#Topping"/>
        <Class IRI="#VanillaExtract"/>
        <Class IRI="#Water"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#Coffee"/>
        <Class IRI="#HotChocolate"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#Cold"/>
        <Class IRI="#Hot"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#CondensedMilk"/>
        <Class IRI="#Cream"/>
        <Class IRI="#Milk"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#Consumable"/>
        <Class IRI="#Temperature"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#Cream"/>
        <Class IRI="#Marshmallow"/>
        <Class IRI="#Sago"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#Drink"/>
        <Class IRI="#Ingredient"/>
    </DisjointClasses>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#hasIngredient"/>
        <ObjectProperty IRI="#contains"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#hasTopping"/>
        <ObjectProperty IRI="#contains"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#isIngredientOf"/>
        <ObjectProperty IRI="#containedBy"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#isToppingOf"/>
        <ObjectProperty IRI="#containedBy"/>
    </SubObjectPropertyOf>
    <InverseObjectProperties>
        <ObjectProperty IRI="#containedBy"/>
        <ObjectProperty IRI="#contains"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#hasIngredient"/>
        <ObjectProperty IRI="#isIngredientOf"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#hasTemperature"/>
        <ObjectProperty IRI="#isTemperatureOf"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#hasTopping"/>
        <ObjectProperty IRI="#isToppingOf"/>
    </InverseObjectProperties>
    <FunctionalObjectProperty>
        <ObjectProperty IRI="#hasTemperature"/>
    </FunctionalObjectProperty>
    <AsymmetricObjectProperty>
        <ObjectProperty IRI="#hasIngredient"/>
    </AsymmetricObjectProperty>
    <AsymmetricObjectProperty>
        <ObjectProperty IRI="#hasTemperature"/>
    </AsymmetricObjectProperty>
    <AsymmetricObjectProperty>
        <ObjectProperty IRI="#hasTopping"/>
    </AsymmetricObjectProperty>
    <AsymmetricObjectProperty>
        <ObjectProperty IRI="#isIngredientOf"/>
    </AsymmetricObjectProperty>
    <AsymmetricObjectProperty>
        <ObjectProperty IRI="#isTemperatureOf"/>
    </AsymmetricObjectProperty>
    <AsymmetricObjectProperty>
        <ObjectProperty IRI="#isToppingOf"/>
    </AsymmetricObjectProperty>
    <TransitiveObjectProperty>
        <ObjectProperty IRI="#contains"/>
    </TransitiveObjectProperty>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#contains"/>
        <Class IRI="#Consumable"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasIngredient"/>
        <Class IRI="#Drink"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasTemperature"/>
        <Class IRI="#Consumable"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasTopping"/>
        <Class IRI="#Drink"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isIngredientOf"/>
        <ObjectUnionOf>
            <Class IRI="#Drink"/>
            <Class IRI="#Ingredient"/>
        </ObjectUnionOf>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isToppingOf"/>
        <Class IRI="#Topping"/>
    </ObjectPropertyDomain>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#contains"/>
        <Class IRI="#Consumable"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasIngredient"/>
        <ObjectUnionOf>
            <Class IRI="#Drink"/>
            <Class IRI="#Ingredient"/>
        </ObjectUnionOf>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasTemperature"/>
        <Class IRI="#Temperature"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasTopping"/>
        <Class IRI="#Topping"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isIngredientOf"/>
        <Class IRI="#Drink"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isToppingOf"/>
        <Class IRI="#Drink"/>
    </ObjectPropertyRange>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#CafeMocha</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">A CafeMocha needs to have CoffeeBeans, some sort of Creamer, and either Cocoa or ChocolateSyrup.
</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#CafeMocha</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">CafeMocha and Mochachino are two names for the same beverage.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#CaffeLatte</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Note that when you run the automated reasoner, CaffeLatte is classified as a subclass of CafeMocha.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#ClassificationProbe</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">This probe tests that a drink can be classified based on its ingredients. Note that when you run the automated reasoner, this drink is correctly classified as an IcedCoffee (since it contains all the necessary ingredients).</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Coffee</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">The class of Coffee Drinks. This is the class that contains the vrious types of coffees.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Cold</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Consumables related to Cold through the hasTemperature object property are Cold.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Consumable</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Things that are edible.
</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Cream</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Cream is a subclass of both Creamer and Topping as it can be used for both purposes.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Creamer</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Ingredients used as Creamer in Drinks.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#DisjointProbe</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">This tests that Drinks and Ingredients are disjoint.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Drink</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Consumables that are Drinks.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#EspressoProbe</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">This tests the integrity of the closure axiom that Espresso has. All hasIngredient relationships of Espresso has to either be to CoffeeBeans or Hot Water.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#FailureProbe</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">These should be marked as inconsistent by the automated reasoner.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Hot</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Consumables related to Hot through the hasTemperature object property are Hot.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#HotChocolate</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">HotChocolate consists of at least water, sugar, and cocoa.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#HotChocolate</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">The only topping allowed on HotChocolate, if any,  is Marshmallow.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Ingredient</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Consumables used as Ingredients to make Drinks.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#NewDrinkProbe</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">This tests that the ontology can correctly classify a new drink. In this case, a Cappucino with added ChocolateSyrup is subtype of CafeMocha.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Sago</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">This is the small translucent &quot;bubbles&quot; used as a topping in BubbleTea.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SuccessProbe</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">These should be correctly classified by the automated reasoner. These should not be marked as inconsistent by the automated reasoner.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Temperature</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">This class encapsulates the concept of Temperature.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#TestProbe</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Test probes used to verify the validity of the ontology.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Topping</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Ingredients used as Toppings for Drinks.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#containedBy</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Inverse of contains.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#contains</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Any Consumable can contain another Consumable.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasIngredient</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Drinks can be made from Ingredients and other Drinks.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasTemperature</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Consumables may have a Temperature.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasTopping</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Drinks can be garnished with Toppings.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isIngredientOf</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Inverse of hasIngredient.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isTemperatureOf</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Inverse of hasTemperature.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isToppingOf</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Inverse of hasTopping.</Literal>
    </AnnotationAssertion>
</Ontology>



<!-- Generated by the OWL API (version 3.5.0) http://owlapi.sourceforge.net -->

